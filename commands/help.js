const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('help')
        .setDescription('Muestra todos los comandos disponibles del bot')
        .addStringOption(option =>
            option.setName('comando')
                .setDescription('Comando espec√≠fico para ver informaci√≥n detallada')
                .setRequired(false)),

    async execute(interaction) {
        const specificCommand = interaction.options.getString('comando');
        
        if (specificCommand) {
            await this.showCommandHelp(interaction, specificCommand);
        } else {
            await this.showAllCommands(interaction);
        }
    },

    async showAllCommands(interaction) {
        const embed = new EmbedBuilder()
            .setColor('#7289da')
            .setTitle('ü§ñ Comandos del Bot de Roles')
            .setDescription('Aqu√≠ tienes todos los comandos disponibles organizados por categor√≠as.')
            .setThumbnail(interaction.client.user.displayAvatarURL({ dynamic: true }))
            .setTimestamp()
            .setFooter({ text: 'Usa /help <comando> para informaci√≥n detallada' });

        // Comandos de gesti√≥n de roles
        embed.addFields({
            name: 'üé≠ Gesti√≥n de Roles',
            value: [
                '`/rol` - Asigna un rol a un usuario',
                '`/removerol` - Remueve un rol de un usuario',
                '`/roles` - Lista todos los roles disponibles',
                '`/autorol` - Crea panel de autoasignaci√≥n'
            ].join('\n'),
            inline: false
        });

        // Comandos de moderaci√≥n
        embed.addFields({
            name: 'üõ°Ô∏è Moderaci√≥n',
            value: [
                '`/warn` - Advierte a un usuario',
                '`/warnings` - Muestra advertencias de un usuario',
                '`/mute` - Mutea a un usuario por tiempo',
                '`/unmute` - Desmutea a un usuario',
                '`/kick` - Expulsa a un usuario',
                '`/ban` - Banea a un usuario',
                '`/clear` - Borra mensajes del canal',
                '`/pclear` - Configura rol para clear',
                '`/settingsmod` - Configura canal de logs',
                '`/rolsettingsmod` - Configura permisos de comandos'
            ].join('\n'),
            inline: false
        });

        // Comandos de verificaci√≥n
        embed.addFields({
            name: 'üîê Verificaci√≥n',
            value: [
                '`/verifymsg` - Crea mensaje de verificaci√≥n con reacciones',
                '`/pverify` - Configura permisos de verificaci√≥n',
                '`/listverify` - Lista mensajes de verificaci√≥n activos',
                '`/deleteverify` - Elimina mensaje de verificaci√≥n'
            ].join('\n'),
            inline: false
        });

        // Comandos de tickets
        embed.addFields({
            name: 'üé´ Sistema de Tickets',
            value: [
                '`!pticket <rol_id>` - Configura permisos de tickets',
                '`!ticketsetup #canal | mensaje | rolID_soporte` - Configura sistema',
                '`!ticketmsg T√≠tulo | Mensaje | Emoji` - Crea mensaje de tickets',
                '`!close` - Cierra un ticket (solo en canales de tickets)'
            ].join('\n'),
            inline: false
        });

        // Comandos de bloqueo
        embed.addFields({
            name: 'üö´ Sistema de Bloqueo',
            value: [
                '`!sgconfig <rol_id>` - Configura permisos de bloqueo',
                '`!sgblock <comando> <rol_id> <permitido>` - Bloquea comandos'
            ].join('\n'),
            inline: false
        });

        // Comandos de utilidad
        embed.addFields({
            name: '‚öôÔ∏è Utilidad',
            value: [
                '`/help` - Muestra esta lista de comandos',
                '`/prefix` - Configura el prefijo del bot',
                '`/info` - Informaci√≥n del bot ScriptManager',
                '`/help <comando>` - Informaci√≥n detallada de un comando'
            ].join('\n'),
            inline: false
        });

        // Comandos legacy
        embed.addFields({
            name: 'üìù Comandos Legacy (con prefijo)',
            value: [
                '`!rol @usuario RolEjemplo` - Asigna rol',
                '`!removerol @usuario RolEjemplo` - Remueve rol',
                '`!roles` - Lista roles disponibles',
                '`!autorol "T√≠tulo" "Descripci√≥n" @rol1 @rol2` - Panel autoasignaci√≥n',
                '`!prefix [nuevo_prefijo]` - Configura prefijo',
                '`!help` - Muestra comandos',
                '`!info` - Informaci√≥n del bot',
                '`!warn @usuario raz√≥n` - Advierte usuario',
                '`!warnings @usuario` - Muestra advertencias',
                '`!mute @usuario duraci√≥n raz√≥n` - Mutea usuario',
                '`!unmute @usuario raz√≥n` - Desmutea usuario',
                '`!kick @usuario raz√≥n` - Expulsa usuario',
                '`!ban @usuario raz√≥n duraci√≥n` - Banea usuario',
                '`!clear [cantidad] [#canal]` - Borra mensajes',
                '`!pclear @rol` - Configura rol para clear',
                '`!verifymsg #canal | t√≠tulo | mensaje | rolID | emoji` - Crea verificaci√≥n',
                '`!pverify <rol_id>` - Configura permisos de verificaci√≥n',
                '`!listverify` - Lista mensajes de verificaci√≥n',
                '`!deleteverify <id>` - Elimina mensaje de verificaci√≥n',
                '`!pticket <rol_id>` - Configura permisos de tickets',
                '`!ticketsetup #canal | mensaje | rolID_soporte` - Configura sistema de tickets',
                '`!ticketmsg T√≠tulo | Mensaje | Emoji` - Crea mensaje de tickets',
                '`!close` - Cierra un ticket',
                '`!sgconfig <rol_id>` - Configura permisos de bloqueo',
                '`!sgblock <comando> <rol_id> <permitido>` - Bloquea comandos'
            ].join('\n'),
            inline: false
        });

        // Informaci√≥n adicional
        embed.addFields({
            name: '‚ÑπÔ∏è Informaci√≥n',
            value: [
                '‚Ä¢ Los comandos slash requieren permisos espec√≠ficos',
                '‚Ä¢ Los comandos legacy funcionan con el prefijo configurado',
                '‚Ä¢ El sistema de autoasignaci√≥n usa botones interactivos',
                '‚Ä¢ Todos los comandos incluyen verificaciones de seguridad'
            ].join('\n'),
            inline: false
        });

        await interaction.reply({ embeds: [embed] });
    },

    async showCommandHelp(interaction, commandName) {
        const command = interaction.client.commands.get(commandName);
        
        if (!command) {
            return await interaction.reply({
                content: `‚ùå No se encontr√≥ el comando \`${commandName}\`.`,
                ephemeral: true
            });
        }

        const embed = new EmbedBuilder()
            .setColor('#7289da')
            .setTitle(`üìñ Ayuda: /${commandName}`)
            .setTimestamp();

        // Informaci√≥n del comando
        if (command.data) {
            embed.setDescription(command.data.description || 'Sin descripci√≥n disponible.');
            
            // Opciones del comando
            if (command.data.options && command.data.options.length > 0) {
                const options = command.data.options.map(option => {
                    const required = option.required ? ' (Requerido)' : ' (Opcional)';
                    return `‚Ä¢ \`${option.name}\` - ${option.description}${required}`;
                }).join('\n');
                
                embed.addFields({
                    name: 'üîß Opciones',
                    value: options,
                    inline: false
                });
            }

            // Permisos requeridos
            if (command.data.default_member_permissions) {
                embed.addFields({
                    name: 'üîê Permisos Requeridos',
                    value: 'Gestionar Roles',
                    inline: true
                });
            }
        }

        // Ejemplos de uso
        const examples = this.getCommandExamples(commandName);
        if (examples) {
            embed.addFields({
                name: 'üí° Ejemplos de Uso',
                value: examples,
                inline: false
            });
        }

        // Informaci√≥n adicional
        const additionalInfo = this.getCommandAdditionalInfo(commandName);
        if (additionalInfo) {
            embed.addFields({
                name: '‚ÑπÔ∏è Informaci√≥n Adicional',
                value: additionalInfo,
                inline: false
            });
        }

        await interaction.reply({ embeds: [embed] });
    },

    getCommandExamples(commandName) {
        const examples = {
            'rol': [
                '`/rol usuario:@usuario rol:@RolEjemplo`',
                '`!rol @usuario RolEjemplo`'
            ],
            'removerol': [
                '`/removerol usuario:@usuario rol:@RolEjemplo`',
                '`!removerol @usuario RolEjemplo`'
            ],
            'roles': [
                '`/roles`',
                '`!roles`'
            ],
            'autorol': [
                '`/autorol titulo:"Roles de Juegos" descripcion:"Selecciona tus juegos favoritos" rol1:@Gamer rol2:@Streamer`',
                '`!autorol "Roles de Juegos" "Selecciona tus juegos favoritos" @Gamer @Streamer`'
            ],
            'prefix': [
                '`/prefix nuevo_prefijo:?`',
                '`!prefix ?`',
                '`!prefix` (para ver el prefijo actual)'
            ],
            'info': [
                '`/info`',
                '`!info`'
            ],
            'warn': [
                '`/warn usuario:@usuario razon:Spam`',
                '`!warn @usuario Spam`'
            ],
            'warnings': [
                '`/warnings usuario:@usuario`',
                '`!warnings @usuario`'
            ],
            'mute': [
                '`/mute usuario:@usuario duracion:1h razon:Spam`',
                '`!mute @usuario 1h Spam`'
            ],
            'unmute': [
                '`/unmute usuario:@usuario razon:Arrepentimiento`',
                '`!unmute @usuario Arrepentimiento`'
            ],
            'kick': [
                '`/kick usuario:@usuario razon:Violaci√≥n de reglas`',
                '`!kick @usuario Violaci√≥n de reglas`'
            ],
            'ban': [
                '`/ban usuario:@usuario razon:Spam masivo duracion:7d`',
                '`!ban @usuario Spam masivo 7d`'
            ],
            'clear': [
                '`/clear cantidad:10` - Borra 10 mensajes del canal actual',
                '`/clear cantidad:50 canal:#general` - Borra 50 mensajes del canal #general',
                '`!clear 10` - Borra 10 mensajes del canal actual',
                '`!clear 50 #general` - Borra 50 mensajes del canal #general'
            ],
            'pclear': [
                '`/pclear rol:@Moderador` - Configura el rol Moderador para usar clear',
                '`!pclear @Moderador` - Configura el rol Moderador para usar clear'
            ],
            'pticket': [
                '`!pticket 123456789012345678` - Configura rol con ID para usar comandos de tickets',
                '`!pticket 987654321098765432` - Configura otro rol para permisos de tickets'
            ],
            'ticketsetup': [
                '`!ticketsetup #tickets | Bienvenido al ticket! Describe tu problema. | 123456789012345678`',
                '`!ticketsetup #soporte | Hola! ¬øEn qu√© puedo ayudarte? | 987654321098765432`'
            ],
            'ticketmsg': [
                '`!ticketmsg Soporte T√©cnico | Reacciona para abrir un ticket | üé´`',
                '`!ticketmsg Ayuda | ¬øNecesitas ayuda? Reacciona aqu√≠ | ‚ùì`'
            ],
            'close': [
                '`!close` - Cierra el ticket actual (solo funciona en canales de tickets)'
            ],
            'sgconfig': [
                '`!sgconfig 123456789012345678` - Configura rol con ID para usar comandos de bloqueo',
                '`!sgconfig 987654321098765432` - Configura otro rol para permisos de bloqueo'
            ],
            'sgblock': [
                '`!sgblock warn 123456789012345678 true` - Solo el rol puede usar warn',
                '`!sgblock ban 987654321098765432 false` - Bloquea ban completamente',
                '`!sgblock clear 123456789012345678 true` - Solo el rol puede usar clear'
            ]
        };

        return examples[commandName] ? examples[commandName].join('\n') : null;
    },

    getCommandAdditionalInfo(commandName) {
        const info = {
            'rol': '‚Ä¢ Verifica que el usuario no tenga ya el rol\n‚Ä¢ Comprueba permisos del bot y usuario\n‚Ä¢ Previene asignaci√≥n de roles superiores al bot',
            'removerol': '‚Ä¢ Verifica que el usuario tenga el rol\n‚Ä¢ Comprueba permisos del bot y usuario\n‚Ä¢ Previene remoci√≥n de roles superiores al bot',
            'roles': '‚Ä¢ Muestra roles ordenados por jerarqu√≠a\n‚Ä¢ Incluye n√∫mero de miembros por rol\n‚Ä¢ Excluye roles gestionados por integraciones',
            'autorol': '‚Ä¢ Crea botones interactivos para autoasignaci√≥n\n‚Ä¢ M√°ximo 5 roles por panel\n‚Ä¢ Los usuarios pueden asignarse/removerse roles',
            'prefix': '‚Ä¢ Cambia el prefijo solo para este servidor\n‚Ä¢ M√°ximo 5 caracteres\n‚Ä¢ No puede contener espacios\n‚Ä¢ Se mantiene en memoria',
            'info': '‚Ä¢ Muestra informaci√≥n detallada del bot\n‚Ä¢ Incluye estad√≠sticas en tiempo real\n‚Ä¢ Muestra uptime del bot\n‚Ä¢ Informaci√≥n del desarrollador',
            'warn': '‚Ä¢ Registra advertencias en data/warnings.json\n‚Ä¢ Verifica permisos de moderaci√≥n\n‚Ä¢ Muestra total de advertencias del usuario\n‚Ä¢ Incluye fecha y moderador',
            'warnings': '‚Ä¢ Muestra las √∫ltimas 10 advertencias\n‚Ä¢ Incluye raz√≥n, moderador y fecha\n‚Ä¢ Formato de timestamp legible\n‚Ä¢ Ordenadas por m√°s recientes',
            'mute': '‚Ä¢ Crea rol Muted si no existe\n‚Ä¢ Configura permisos autom√°ticamente\n‚Ä¢ Desmutea autom√°ticamente tras la duraci√≥n\n‚Ä¢ Formato: 1d 2h 3m 4s',
            'unmute': '‚Ä¢ Remueve el rol Muted\n‚Ä¢ Verifica que el usuario est√© muteado\n‚Ä¢ Registra la acci√≥n en logs\n‚Ä¢ Solo para usuarios muteados',
            'kick': '‚Ä¢ Expulsa al usuario del servidor\n‚Ä¢ Verifica jerarqu√≠a de roles\n‚Ä¢ Comprueba permisos del bot\n‚Ä¢ Registra en logs de moderaci√≥n',
            'ban': '‚Ä¢ Banea temporal o permanentemente\n‚Ä¢ Formato: 1d 2h 3m 4s o permanente\n‚Ä¢ Desbanea autom√°ticamente tras duraci√≥n\n‚Ä¢ Verifica permisos y jerarqu√≠a',
            'clear': '‚Ä¢ Borra mensajes del canal actual o mencionado\n‚Ä¢ Requiere rol autorizado configurado con pclear\n‚Ä¢ M√°ximo 100 mensajes por comando\n‚Ä¢ Solo borra mensajes de los √∫ltimos 14 d√≠as\n‚Ä¢ Verifica permisos del bot y usuario',
            'pclear': '‚Ä¢ Configura el rol autorizado para usar clear\n‚Ä¢ Solo administradores pueden configurar\n‚Ä¢ Se guarda en data/clearconfig.json\n‚Ä¢ Un rol por servidor\n‚Ä¢ Requiere permisos de administrador',
            'pticket': '‚Ä¢ Configura qu√© rol puede usar comandos de tickets\n‚Ä¢ Solo administradores pueden configurar\n‚Ä¢ Se guarda en data/ticket_permisos.json\n‚Ä¢ Un rol por servidor\n‚Ä¢ Requiere permisos de administrador',
            'ticketsetup': '‚Ä¢ Configura el sistema de tickets del servidor\n‚Ä¢ Define canal, mensaje personalizado y rol de soporte\n‚Ä¢ Se guarda en data/ticket_config.json\n‚Ä¢ Requiere permisos configurados con pticket\n‚Ä¢ Usa | como separador de par√°metros',
            'ticketmsg': '‚Ä¢ Crea mensaje de tickets con reacci√≥n\n‚Ä¢ Define t√≠tulo, mensaje y emoji personalizado\n‚Ä¢ Se guarda en data/ticket_message.json\n‚Ä¢ Requiere sistema configurado con ticketsetup\n‚Ä¢ Los usuarios reaccionan para abrir tickets',
            'close': '‚Ä¢ Cierra un ticket de soporte\n‚Ä¢ Solo funciona en canales de tickets\n‚Ä¢ Solo el propietario o personal de soporte puede cerrar\n‚Ä¢ Elimina el canal autom√°ticamente\n‚Ä¢ Espera 5 segundos antes de eliminar',
            'sgconfig': '‚Ä¢ Configura qu√© rol puede usar comandos de bloqueo\n‚Ä¢ Solo administradores pueden configurar\n‚Ä¢ Se guarda en data/sgconfig.json\n‚Ä¢ Un rol por servidor\n‚Ä¢ Requiere permisos de administrador',
            'sgblock': '‚Ä¢ Bloquea un comando espec√≠fico para todos excepto un rol\n‚Ä¢ Requiere permisos configurados con sgconfig\n‚Ä¢ Se guarda en data/command_block.json\n‚Ä¢ Permite bloquear completamente o solo para un rol\n‚Ä¢ Verifica permisos antes de ejecutar comandos'
        };

        return info[commandName] || null;
    },

    // Comando legacy con prefijo din√°mico
    legacy: true,
    async executeLegacy(message, args) {
        const specificCommand = args[0];
        
        if (specificCommand) {
            await this.showCommandHelpLegacy(message, specificCommand);
        } else {
            await this.showAllCommandsLegacy(message);
        }
    },

    async showAllCommandsLegacy(message) {
        // Obtener el prefijo actual del servidor
        const prefixCommand = require('./prefix.js');
        const currentPrefix = prefixCommand.getPrefix(message.guild.id);

        const embed = new EmbedBuilder()
            .setColor('#7289da')
            .setTitle('ü§ñ Comandos del Bot de Roles')
            .setDescription(`Aqu√≠ tienes todos los comandos disponibles. Prefijo actual: **${currentPrefix}**`)
            .setThumbnail(message.client.user.displayAvatarURL({ dynamic: true }))
            .setTimestamp()
            .setFooter({ text: `Usa ${currentPrefix}help <comando> para informaci√≥n detallada` });

        // Comandos de gesti√≥n de roles
        embed.addFields({
            name: 'üé≠ Gesti√≥n de Roles',
            value: [
                `\`${currentPrefix}rol @usuario RolEjemplo\` - Asigna un rol`,
                `\`${currentPrefix}removerol @usuario RolEjemplo\` - Remueve un rol`,
                `\`${currentPrefix}roles\` - Lista todos los roles`,
                `\`${currentPrefix}autorol "T√≠tulo" "Descripci√≥n" @rol1 @rol2\` - Panel autoasignaci√≥n`
            ].join('\n'),
            inline: false
        });

        // Comandos de moderaci√≥n
        embed.addFields({
            name: 'üõ°Ô∏è Moderaci√≥n',
            value: [
                `\`${currentPrefix}warn @usuario raz√≥n\` - Advierte usuario`,
                `\`${currentPrefix}warnings @usuario\` - Muestra advertencias`,
                `\`${currentPrefix}mute @usuario duraci√≥n raz√≥n\` - Mutea usuario`,
                `\`${currentPrefix}unmute @usuario raz√≥n\` - Desmutea usuario`,
                `\`${currentPrefix}kick @usuario raz√≥n\` - Expulsa usuario`,
                `\`${currentPrefix}ban @usuario raz√≥n duraci√≥n\` - Banea usuario`,
                `\`${currentPrefix}clear [cantidad] [#canal]\` - Borra mensajes`,
                `\`${currentPrefix}pclear @rol\` - Configura rol para clear`
            ].join('\n'),
            inline: false
        });

        // Comandos de tickets
        embed.addFields({
            name: 'üé´ Sistema de Tickets',
            value: [
                `\`${currentPrefix}pticket <rol_id>\` - Configura permisos de tickets`,
                `\`${currentPrefix}ticketsetup #canal | mensaje | rolID_soporte\` - Configura sistema`,
                `\`${currentPrefix}ticketmsg T√≠tulo | Mensaje | Emoji\` - Crea mensaje de tickets`,
                `\`${currentPrefix}close\` - Cierra un ticket (solo en canales de tickets)`
            ].join('\n'),
            inline: false
        });

        // Comandos de bloqueo
        embed.addFields({
            name: 'üö´ Sistema de Bloqueo',
            value: [
                `\`${currentPrefix}sgconfig <rol_id>\` - Configura permisos de bloqueo`,
                `\`${currentPrefix}sgblock <comando> <rol_id> <permitido>\` - Bloquea comandos`
            ].join('\n'),
            inline: false
        });

        // Comandos de utilidad
        embed.addFields({
            name: '‚öôÔ∏è Utilidad',
            value: [
                `\`${currentPrefix}help\` - Muestra esta lista`,
                `\`${currentPrefix}prefix [nuevo_prefijo]\` - Configura prefijo`,
                `\`${currentPrefix}info\` - Informaci√≥n del bot`,
                `\`${currentPrefix}help <comando>\` - Informaci√≥n detallada`
            ].join('\n'),
            inline: false
        });

        // Informaci√≥n adicional
        embed.addFields({
            name: '‚ÑπÔ∏è Informaci√≥n',
            value: [
                '‚Ä¢ Los comandos requieren permisos espec√≠ficos',
                '‚Ä¢ El sistema incluye verificaciones de seguridad',
                '‚Ä¢ Los paneles de autoasignaci√≥n usan botones interactivos',
                '‚Ä¢ El prefijo se puede personalizar por servidor'
            ].join('\n'),
            inline: false
        });

        await message.reply({ embeds: [embed] });
    },

    async showCommandHelpLegacy(message, commandName) {
        const command = message.client.commands.get(commandName);
        
        if (!command) {
            return await message.reply(`‚ùå No se encontr√≥ el comando \`${commandName}\`.`);
        }

        const prefixCommand = require('./prefix.js');
        const currentPrefix = prefixCommand.getPrefix(message.guild.id);

        const embed = new EmbedBuilder()
            .setColor('#7289da')
            .setTitle(`üìñ Ayuda: ${currentPrefix}${commandName}`)
            .setTimestamp();

        // Informaci√≥n del comando
        if (command.data) {
            embed.setDescription(command.data.description || 'Sin descripci√≥n disponible.');
        }

        // Ejemplos de uso
        const examples = this.getCommandExamples(commandName);
        if (examples) {
            // Convertir ejemplos slash a legacy
            const legacyExamples = examples.replace(/\/[a-z]+/g, `${currentPrefix}${commandName}`);
            embed.addFields({
                name: 'üí° Ejemplos de Uso',
                value: legacyExamples,
                inline: false
            });
        }

        // Informaci√≥n adicional
        const additionalInfo = this.getCommandAdditionalInfo(commandName);
        if (additionalInfo) {
            embed.addFields({
                name: '‚ÑπÔ∏è Informaci√≥n Adicional',
                value: additionalInfo,
                inline: false
            });
        }

        await message.reply({ embeds: [embed] });
    }
}; 